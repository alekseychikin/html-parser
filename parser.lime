%class template_parser
%start doc

%left TK_COMMA
%left TK_MINUS
%left TK_PLUS
%left TK_LT
%left TK_GT
%left TK_ASSIGMENT
%left TK_EQUAL
%left TK_NOT_EQUAL
%left TK_LT_EQUAL
%left TK_GT_EQUAL
%left TK_LOGIC_AND
%left TK_LOGIC_OR
%left TK_PIPE
%left TK_TWO_DOTS

doc
= lines
  { ParserE::saveResults($1); }
.

lines
= line_element
  { $$ = array($1); }
| lines line_element
  { $1[] = $2; $$ = $1; }
.

line_element
= tag
| text_node
  {$$ = new TextNode($1); }
| logic_node
.

tag
= TK_LT tag_name attributes GT
  { $$ = new Tag($2, 'open'); $$->setAttributes($3); }
| TK_LT TK_SLASH tag_name GT
  { $$ = new Tag($3, 'close'); }
.

mb_space
=
| TK_SPACE
.

tag_name
= TK_LETTERS
| tag_name TK_COLON TK_LETTERS
  { $$ = $1 . $2 . $3; }
.

GT
= TK_SLASH TK_GT
| TK_SPACE TK_SLASH TK_GT
| TK_GT
| TK_SPACE TK_GT
.

attributes
=
  { $$ = array(); }
| attributes TK_SPACE attribute
  { $1[] = $3; $$ = $1; }
.

attribute
= attrib_name mb_space TK_ASSIGMENT mb_space attrib_value
  { $$ = new Attribute($1, $5); }
| attrib_name
  { $$ = new Attribute($1); }
.

attrib_value
= TK_DOUBLE_QUOTE TK_DOUBLE_QUOTE
  { $$ = ""; }
| TK_SINGLE_QUOTE TK_SINGLE_QUOTE
  { $$ = ""; }
| TK_DOUBLE_QUOTE attrib_value_elements TK_DOUBLE_QUOTE
  { $$ = $2; }
| TK_SINGLE_QUOTE attrib_value_elements TK_SINGLE_QUOTE
  { $$ = $2; }
.

attrib_value_elements
= attrib_value_element
  { $$ = array($1); }
| attrib_value_elements attrib_value_element
  { $1[] = $2; $$ = $1; }
.

attrib_value_element
= text
  { $$ = '"' . $1 . '"'; }
| logic_node
.

string
= TK_DOUBLE_QUOTE string_elements TK_DOUBLE_QUOTE
  { $$ = $2; }
| TK_SINGLE_QUOTE string_elements TK_SINGLE_QUOTE
  { $$ = $2; }
.

string_elements
= string_element
  { $$ = array($1); }
| string_elements string_element
  { $1[] = $2; $$ = $1; }
.

string_element
= text
.

attrib_name
= TK_LETTERS
| attrib_name TK_MINUS TK_LETTERS
  { $$ = $1 . $2 . $3; }
.

text_node
= text_node_element
| text_node text_node_element
  { $$ = $1 . $2; }
.

text_node_element
= text
| TK_SINGLE_QUOTE
| TK_DOUBLE_QUOTE
.

logic_node
= TK_LOGIC_BEGIN mb_space constructions TK_LOGIC_END
  { $$ = new LogicNode($3); }
.

constructions
= construction
  { $$ = array(array('value' => $1, 'type' => 'expr')); }
| constructions construction
  { $1[] = array('value' => $2, 'type' => 'expr'); $$ = $1; }
.

construction
= assignment
| expressions
.

assignment
= complex_var TK_ASSIGMENT mb_space expressions
.

expressions
= logic_expression
.

logic_expression
= logic_expression TK_LOGIC_AND mb_space logic_expression
| logic_expression TK_LOGIC_OR mb_space logic_expression
| logic_expression TK_EQUAL mb_space logic_expression
| logic_expression TK_NOT_EQUAL mb_space logic_expression
| logic_expression TK_LT_EQUAL mb_space logic_expression
| logic_expression TK_GT_EQUAL mb_space logic_expression
| logic_expression TK_LT mb_space logic_expression
| logic_expression TK_GT mb_space logic_expression
| TK_EXCLAMATION_MARK mb_space logic_expression
| math_expression
.

math_expression
= math_expression TK_PLUS mb_space math_expression
| math_expression TK_MULTIPLY mb_space math_expression
| math_expression TK_SLASH mb_space math_expression
| math_expression TK_MINUS mb_space math_expression
| TK_BRAKETS_OPEN mb_space logic_expression TK_BRAKETS_CLOSE mb_space
| TK_MINUS mb_space math_expression
| complex_var
| function
| TK_NUMBERS mb_space
| TK_DIGITS mb_space
.

function
= complex_var TK_BRAKETS_OPEN mb_space params_list TK_BRAKETS_CLOSE mb_space
.

params_list
= expressions
| params_list TK_COMMA mb_space expressions
.

complex_var
= var mb_space
| complex_var brackets
| complex_var dot_indexes
.

dot_indexes
= dot_index
| dot_indexes dot_index
.

dot_index
= TK_DOT mb_space var mb_space
.

brackets
= bracket
| brackets bracket
.

bracket
= TK_SQUARE_BRAKETS_OPEN mb_space index TK_SQUARE_BRAKETS_CLOSE mb_space
.

index
= TK_DIGITS mb_space
| complex_var
| string mb_space
.

var
= var_first_letter
| var var_first_letter
  { $$ = $1 . $2; }
| var TK_DIGITS
  { $$ = $1 . $2; }
.

var_first_letter
= TK_LETTERS
| TK_UNDERSCORE
| TK_BAKS
.

text
= text_element
| text text_element
  { $$ = $1 . $2; }
.

text_element
= TK_DIGITS
| TK_MINUS
| TK_PLUS
| TK_MULTIPLY
| TK_LT_EQUAL
| TK_GT_EQUAL
| TK_LETTERS
| TK_SLASH
| TK_EQUAL
| TK_COMMA
| TK_COLON
| TK_DOT
| TK_BAKS
| TK_EXCLAMATION_MARK
| TK_FIGURE_BRAKETS_OPEN
| TK_FIGURE_BRAKETS_CLOSE
| TK_BRAKETS_OPEN
| TK_BRAKETS_CLOSE
| TK_SQUARE_BRAKETS_OPEN
| TK_SQUARE_BRAKETS_CLOSE
| TK_UNDERSCORE
| TK_ASSIGMENT
| TK_NOT_EQUAL
| TK_SPACE
| TK_OTHER
.
