%class template_parser
%start doc

%left TK_MINUS
%left TK_PLUS
%left TK_LT
%left TK_GT
%left TK_ASSIGMENT
%left TK_EQUAL
%left TK_NOT_EQUAL
%left TK_LT_EQUAL
%left TK_GT_EQUAL

doc
= lines
  { showResults($1); }
.

lines
= line
  { $$ = array($1); }
| lines line
  { $1[] = $2; $$ = $1; }
.

line
= tag
  { $$ = array($1); }
| text_node
  { $$ = array($1); }
| logic_node
  { $$ = array($1); }
| line tag
  { $1[] = $2; $$ = $1; }
| line text_node
  { $1[] = $2; $$ = $1; }
| line logic_node
  { if ($2) {$1[] = $2; $$ = $1;} }
.

tag
= TK_LT tag_name attributes GT
  { $$ = new Tag($2, 'open'); $$->setAttributes($3); }
| TK_LT TK_SLASH tag_name TK_GT
  { $$ = new Tag($3, 'close'); }
.

tag_name
= TK_LETTERS
| TK_TAG_NAME
.

GT
= TK_SLASH TK_GT
| TK_GT
.

attributes
=
  { $$ = array(); }
| attribute
  { $$ = array($1); }
| logic_node
  { $$ = array($1); }
| attributes logic_node
  { $1[] = $2; $$ = $1; }
| attributes attribute
  { $1[] = $2; $$ = $1; }
.

attribute
= attrib_name attrib_value
  { $$ = new Attribute($1, $2); }
.

attrib_value
=
  { $$ = ""; }
| TK_ASSIGMENT string
  { $$ = $2; }
| TK_ASSIGMENT TAG_NAME
  { $$ = $2; }
| TK_ASSIGMENT TK_DIGITS
  { $$ = $2; }
| TK_ASSIGMENT TK_OTHER
  { $$ = $2; }
.

string
= TK_DOUBLE_QUOTE string_elements TK_DOUBLE_QUOTE
  { $$ = $2; }
| TK_SINGLE_QUOTE string_elements TK_SINGLE_QUOTE
  { $$ = $2; }
.

string_elements
= string_element
  { $$ = array($1); }
| string_elements string_element
  { $1[] = $2; $$ = $1; }
.

string_element
= TK_DIGITS
| TK_DOT
| TK_MINUS
| TK_PLUS
| TK_LT_EQUAL
| TK_GT_EQUAL
| TK_LT
| TK_GT
| TK_TAG_NAME
| TK_VAR
| TK_LETTERS
| TK_SLASH
| TK_EQUAL
| TK_ASSIGMENT
| TK_NOT_EQUAL
| TK_TEXT_NODE
| TK_SPACE
| TK_OTHER
| logic_node
.

attrib_name
= tag_name
  { $$ = $1; }
.

text_node
= TK_TEXT_NODE
  { $$ = new TextNode($1); }
| TK_LETTERS
  { $$ = new TextNode($1); }
| TK_TAG_NAME
  { $$ = new TextNode($1); }
| TK_VAR
  { $$ = new TextNode($1); }
| TK_OTHER
  { $$ = new TextNode($1); }
.

logic_node
=
  { $$ = false; }
| TK_LOGIC_BEGIN expr_words TK_LOGIC_END
  { $$ = new LogicNode($2); }
.

expr_words
= expr_node
  { $$ = array($1); }
| expr_words expr_node
  { $1[] = $2; $$ = $1; }
.

expr_node
= TK_LETTERS
  { $$ = array($1, 'type' => 'word'); }
| TK_VAR
  { $$ = $1; }
| expr
  { $$ = array($1, 'type' => 'expr'); }
.

expr
= TK_DIGITS
  { $$ = $1; }
| TK_LETTERS
  { $$ = $1; }
| TK_VAR
  { $$ = $1; }
| expr TK_LT expr
  { $$ = $1 . ' ' . $2 . ' '. $3; }
| expr TK_GT expr
  { $$ = $1 . ' ' . $2 . ' '. $3; }
| expr TK_MINUS expr
  { $$ = $1 . ' ' . $2 . ' '. $3; }
| expr TK_PLUS expr
  { $$ = $1 . ' ' . $2 . ' '. $3; }
| expr TK_ASSIGMENT expr
  { $$ = $1 . ' ' . $2 . ' '. $3; }
| expr TK_EQUAL expr
  { $$ = $1 . ' ' . $2 . ' '. $3; }
| expr TK_NOT_EQUAL expr
  { $$ = $1 . ' ' . $2 . ' '. $3; }
| expr TK_LT_EQUAL expr
  { $$ = $1 . ' ' . $2 . ' '. $3; }
| expr TK_GT_EQUAL expr
  { $$ = $1 . ' ' . $2 . ' '. $3; }
.
